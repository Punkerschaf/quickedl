name: Build QuickEDL with cx_Freeze

on:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r dependencies.txt

      - name: Build executable
        run: |
          python setup.py build
          
      - name: Prepare distribution
        run: |
          mkdir dist
          # Find and copy the executable from build directory
          $buildDir = Get-ChildItem -Path "build" -Directory | Select-Object -First 1
          if ($buildDir) {
            $exePath = Get-ChildItem -Path $buildDir.FullName -Recurse -Name "QuickEDL.exe" | Select-Object -First 1
            if ($exePath) {
              Copy-Item (Join-Path $buildDir.FullName $exePath) "dist\"
              Write-Output "Executable copied successfully"
            } else {
              Write-Error "QuickEDL.exe not found in build directory"
              exit 1
            }
          } else {
            Write-Error "Build directory not found"
            exit 1
          }

      - name: Get version
        id: version
        run: |
          $version = python -c "from version import VERSION; print(VERSION)"
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Create ZIP package
        run: |
          # Verify the executable exists before creating ZIP
          if (!(Test-Path "dist\QuickEDL.exe")) {
            Write-Error "QuickEDL.exe not found in dist directory"
            exit 1
          }
          
          $version = "${{ steps.version.outputs.VERSION }}"
          $filename = "quickedl_v${version}_Windows.zip"
          Compress-Archive -Path "dist\QuickEDL.exe" -DestinationPath $filename
          
          Write-Output "Created package: $filename"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QuickEDL-Windows
          path: quickedl_v${{ steps.version.outputs.VERSION }}_Windows.zip

  build-macos-intel:
    runs-on: macos-13  # Intel runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r dependencies.txt

      - name: Build executable
        run: |
          python setup.py build
          
      - name: Verify build
        run: |
          # Check if build was successful
          if [ ! -d "build" ]; then
            echo "Error: Build directory not found"
            exit 1
          fi
          
          executable_path=$(find build -name "QuickEDL" -type f | head -1)
          if [ -z "$executable_path" ] || [ ! -f "$executable_path" ]; then
            echo "Error: QuickEDL executable not found in build directory"
            exit 1
          fi
          
          echo "Build successful, executable found at: $executable_path"
          file "$executable_path"  # Show architecture info

      - name: Create .app bundle
        run: |
          chmod +x create_macos_app.sh
          ./create_macos_app.sh
          
      - name: Debug Intel app bundle
        run: |
          echo "=== Intel App Bundle Debug Information ==="
          if [ -d "dist/QuickEDL.app" ]; then
            echo "✅ App bundle created successfully"
            echo "App bundle size: $(du -sh dist/QuickEDL.app)"
            echo "Executable architecture:"
            file dist/QuickEDL.app/Contents/MacOS/QuickEDL
            lipo -info dist/QuickEDL.app/Contents/MacOS/QuickEDL 2>/dev/null || echo "Single architecture binary"
            echo "Code signature:"
            codesign -dv --verbose=4 dist/QuickEDL.app 2>&1 || echo "No code signature"
            echo "Extended attributes:"
            xattr -l dist/QuickEDL.app || echo "No extended attributes"
          else
            echo "❌ App bundle not found"
            exit 1
          fi

      - name: Get version
        id: version
        run: |
          version=$(python -c "from version import VERSION; print(VERSION)")
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Create DMG
        run: |
          version="${{ steps.version.outputs.VERSION }}"
          filename="quickedl_v${version}_macOS_Intel.dmg"
          
          # Create temporary directory for DMG contents
          mkdir dmg_temp
          cp -r dist/QuickEDL.app dmg_temp/
          
          # Create DMG
          hdiutil create -volname "QuickEDL v${version} (Intel)" -srcfolder dmg_temp -ov -format UDZO "$filename"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QuickEDL-macOS-Intel
          path: quickedl_v${{ steps.version.outputs.VERSION }}_macOS_Intel.dmg

  build-macos-silicon:
    runs-on: macos-14  # Apple Silicon runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r dependencies.txt

      - name: Build executable
        run: |
          python setup.py build
          
      - name: Verify build
        run: |
          # Check if build was successful
          if [ ! -d "build" ]; then
            echo "Error: Build directory not found"
            exit 1
          fi
          
          executable_path=$(find build -name "QuickEDL" -type f | head -1)
          if [ -z "$executable_path" ] || [ ! -f "$executable_path" ]; then
            echo "Error: QuickEDL executable not found in build directory"
            exit 1
          fi
          
          echo "Build successful, executable found at: $executable_path"
          file "$executable_path"  # Show architecture info

      - name: Create .app bundle
        run: |
          chmod +x create_macos_app.sh
          ./create_macos_app.sh
          
      - name: Debug Apple Silicon app bundle
        run: |
          echo "=== Apple Silicon App Bundle Debug Information ==="
          if [ -d "dist/QuickEDL.app" ]; then
            echo "✅ App bundle created successfully"
            echo "App bundle size: $(du -sh dist/QuickEDL.app)"
            echo "Executable architecture:"
            file dist/QuickEDL.app/Contents/MacOS/QuickEDL
            lipo -info dist/QuickEDL.app/Contents/MacOS/QuickEDL 2>/dev/null || echo "Single architecture binary"
            echo "Code signature:"
            codesign -dv --verbose=4 dist/QuickEDL.app 2>&1 || echo "No code signature"
            echo "Extended attributes:"
            xattr -l dist/QuickEDL.app || echo "No extended attributes"
          else
            echo "❌ App bundle not found"
            exit 1
          fi

      - name: Get version
        id: version
        run: |
          version=$(python -c "from version import VERSION; print(VERSION)")
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Create DMG
        run: |
          version="${{ steps.version.outputs.VERSION }}"
          filename="quickedl_v${version}_macOS_AppleSilicon.dmg"
          
          # Create temporary directory for DMG contents
          mkdir dmg_temp
          cp -r dist/QuickEDL.app dmg_temp/
          
          # Create DMG
          hdiutil create -volname "QuickEDL v${version} (Apple Silicon)" -srcfolder dmg_temp -ov -format UDZO "$filename"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QuickEDL-macOS-AppleSilicon
          path: quickedl_v${{ steps.version.outputs.VERSION }}_macOS_AppleSilicon.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk

      - name: Install dependencies
        run: |
          pip install -r dependencies.txt

      - name: Build executable
        run: |
          python setup.py build
          
      - name: Prepare distribution  
        run: |
          mkdir -p dist
          # Find and copy the executable from build directory
          executable_path=$(find build -name "QuickEDL" -type f | head -1)
          if [ -n "$executable_path" ] && [ -f "$executable_path" ]; then
            cp "$executable_path" dist/
            chmod +x dist/QuickEDL
            echo "Executable copied and made executable"
          else
            echo "Error: QuickEDL executable not found in build directory"
            exit 1
          fi

      - name: Get version
        id: version
        run: |
          version=$(python -c "from version import VERSION; print(VERSION)")
          echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Create ZIP package
        run: |
          version="${{ steps.version.outputs.VERSION }}"
          filename="quickedl_v${version}_Linux.zip"
          cd dist && zip "../$filename" QuickEDL

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: QuickEDL-Linux
          path: quickedl_v${{ steps.version.outputs.VERSION }}_Linux.zip
